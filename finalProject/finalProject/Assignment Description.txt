As stated in the syllabus (course requirements), this message serves as a combined description of your remaining programming assignments and your final project.

Your project should be able to support as many of these features as possible:

1. Modeling: create and store a 3D object by any number of these means:

a. Draw three 2D "elevations" (front, top, side -- see, for example, "my dream house" or "my dream car (front, side, top)"; your implementation should be able to "accept" any reasonable generic object, not just "my house" or "my car"). Upon drawing, store coordinates of the elevations in a way that will allow you to create a 3D model of the object from them.

b. Enter coordinates: choose your model format(s) (e.g., vertices, edges, primitives, other).

2. Transform object: apply 3D (Translate/Rotate/Scale/SHear) transformations to the created object.

3. Viewing: view your created object from multiple views.

4. Transform camera/viewer/light sources(s).

5. Generate different projections of the objects (refer to class discussions about different projections, see projection "tree" see figure).

6. Edit/Change perspective projection vanishing points (1, 2, 3).

7. Create texture/bump/environmental mappings for the object.

Submission:

Deviating from the original programming assignments plan, you will submit weekly progress reports:

1. Create a single web-portal where you will showcase your progress for the remainder of the semester. You should place it immediately off your course web page. Call it finalProject (Mine would be 
http://www.cs.uml.edu/~haim/427546s2018/finalProject).

2. Your project's progress should be viewable on your project web-portal.

3. Starting by Wednesday, 28-mar-2018, and for the remainder of the semester, you'll be be making weekly submissions, filling out and following the requirements on the (revised) final project submission form.

4. Other than features that depend on each other, the order by which you implement features week-over-week is yours to choose.

Grading:

1. Each weekly installment will be graded as a homework assignment. 

2. The homework assignments component of your final grade will be calculated from your two assignments (HW1 and HW2) so far, and your future five weekly project installments. All assignments and installments will be equally weighted.

3. The final project component of your grade will be calculated from a-c below; each one will be graded on a [0 = nothing, ... 5 = outstanding] scale:

a. the number of features you have successfully implemented

b. the quality of each feature's implementation

c. the quality of the project's integration of the features into a single cohesive "system"

Throughout, grades will be determined by (also [0,...,5] scale):

1. your strict adherence to submission instructions, and the ease to test and grade your work (if we run into problems here, we just move on to the next project, and you get no points);

2. the ease, simplicity, and clarity of your interface and a user's ability to understand what s/he can/not accomplish, and to easily accomplish what s/he is set to accomplish;

3. the technological "sophistication" of your approach;

4. "impress me" features that are well documented and clearly understood.

Note: some of the topics referred to have not yet been discussed in class. Hoping that mother nature will not get in our way again, I will try to bring up as many as possible as soon as possible.